# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.approx(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
View(df_interp)
df_interp$tecnologia_alta = 0
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
View(df_interp)
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.approx(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
if (df_interp$tecnologia_alta < 1) {
df_interp$tecnologia_alta = 0
}
if (df_interp$tecnologia_alta < 1) {
df_interp$tecnologia_alta = 0
}
if (df_interp$tecnologia_alta < 1) {
df_interp$tecnologia_alta = 0
}
df_interp$tecnologia_alta = 0
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.approx(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
if (df_interp$tecnologia_alta < 1) {
df_interp$tecnologia_alta = 0
}
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
View(df_interp)
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
rm(complete_grid, all_cities, all_years, all_clinics)
View(df_interp)
View(df)
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
View(df_interp)
## PLOT
df_long <- df_interp %>%
pivot_longer(
cols = where(is.numeric),
names_to = "variable",
values_to = "value"
)
library(ggplot2)
## PLOT
df_long <- df_interp %>%
pivot_longer(
cols = where(is.numeric),
names_to = "variable",
values_to = "value"
)
## PLOT
df_long <- df_interp %>%
tidyr::pivot_longer(
cols = where(is.numeric),
names_to = "variable",
values_to = "value"
)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_long, aes(x = year, y = value, color = prestador)) +
geom_line(na.rm = TRUE) +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
rm(df_long)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp, aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp[df$ciudad == 1], aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
ggplot(df_interp[df_interp$ciudad == 1], aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.spline(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 1)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 1)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_point(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.spline(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 3 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.spline(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ na.approx(.x, x = year, na.rm = FALSE)
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ exp(na.spline(log(.x), x = year, na.rm = FALSE))
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
#preparamos la interpolacion
df_interp$tecnologia_alta[df_interp$tecnologia_alta == 0] <- 0.01
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ exp(na.spline(log(.x), x = year, na.rm = FALSE))
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
#preparamos la interpolacion
df_interp$tecnologia_alta[df_interp$tecnologia_alta == 0] <- 0.01
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ exp(na.spline(log(.x), x = year, na.rm = FALSE))
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
rm(complete_grid, all_cities, all_years, all_clinics)
#preparamos la interpolacion
df_interp$tecnologia_alta[df_interp$tecnologia_alta == 0] <- 0.01
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
~ ifelse(is.na(.x),
exp(na.spline(log(.x), x = year, na.rm = FALSE)),
.x)
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
# Create one plot per variable, faceted by `variable`, colored by `prestador`
df_gh <- df_interp %>%
filter(ciudad == 2 & num_operados>0)
ggplot(df_gh, aes(x = year, y = num_operados, color = prestador)) +
geom_line(na.rm = TRUE) +
theme_minimal() +
labs(title = "Numeric Variables Across Years by Prestador")
df <- df_interp
setwd("/Users/mmunozcampos/Documents/Comp y reg/trabajo_cyr")
library(dplyr)
library(zoo)
library(ggplot2)
base1 <- readxl::read_excel("base_1_caracteristicas.xlsx")
base2 <- readxl::read_excel("base_2_opcion_alternativa.xlsx")
# Creamos Year y realizamos merge
base2$year <- 2001
base1 <- base1 %>%
left_join(base2, by = c("year", "ciudad"))
rm(base2)
# Llenamos NA de tasas de crecimiento y poblacion inicial
summary(as.factor(base1$ciudad))
for (city in 1:20) {
#crecimiento
rate = base1$crecimiento_anual[base1$year == 2001 & base1$ciudad == city][1]
base1$crecimiento_anual[base1$ciudad == city] <- rate
#poblacion inicial
pob_in = base1$poblacion_inicial[base1$year == 2001 & base1$ciudad == city][1]
base1$poblacion_inicial[base1$ciudad == city] <- pob_in
}
# Calculamos la población aproximada
summary(as.factor(base1$year))
for (i in 0:9) {
yr = 2001+i
base1$poblacion_aprox[base1$year == yr] <- base1$poblacion_inicial*(1+base1$crecimiento_anual)^i
}
# cambiamos el nombre a crecimiento anual para no confundirnos
base1$pop_growth_rate_yr <- base1$crecimiento_anual
df <- base1 %>%
select(-crecimiento_anual)
rm(city, i, pob_in, rate, yr, base1)
# ----
# Interpolacion
# ----
# Creamos una base de datos alternativa con los NA correspondientes.
# Step 1: List of all years and clinics
all_cities <- unique(df$ciudad)
all_years <- unique(df$year)
all_clinics <- unique(df$prestador)
# Step 2: Create the complete grid
complete_grid <- tidyr::expand_grid(ciudad = all_cities, year = all_years, prestador = all_clinics)
# Step 3: Join and fill in missing rows with NAs
df_interp <- complete_grid %>%
left_join(df, by = c("ciudad", "year", "prestador"))
df <- df_interp
rm(complete_grid, all_cities, all_years, all_clinics)
#preparamos la interpolacion
df_interp$tecnologia_alta[df_interp$tecnologia_alta == 0] <- 0.01
# Interpolamos valores faltantes
df_interp <- df_interp %>%
arrange(ciudad, prestador, year) %>%
group_by(ciudad, prestador) %>%
mutate(across(
where(is.numeric),
#solamente rellenamos na (no cambiamos los otros)
~ ifelse(is.na(.x),
exp(na.spline(log(.x), x = year, na.rm = FALSE)), .x)
)) %>%
ungroup()
# Volvemos a hacer tecnologia_alta una dummy
df_interp$tecnologia_alta[df_interp$tecnologia_alta < 1] <- 0
df_interp <- df_interp %>% arrange(ciudad, year, prestador)
View(df)
View(df_interp)
writexl::write_xlsx(df_interp, path = "df_p1_interp.xlsx")
writexl::write_xlsx(df, path = "df_p1.xlsx")
